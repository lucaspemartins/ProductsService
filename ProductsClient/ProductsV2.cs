//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductsClient.ProductsService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductData", Namespace="http://schemas.datacontract.org/2004/07/Products")]
    public partial class ProductData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CodeField;
        
        private string NameField;
        
        private decimal PriceField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/productsService/02", ConfigurationName="ProductsClient.ProductsService.IProductsService")]
    public interface IProductsService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/ListMatchingProducts", ReplyAction="http://localhost/productsService/02/IProductsService/ListMatchingProductsResponse" +
            "")]
        ProductsClient.ProductsService.ProductData[] ListMatchingProducts(string match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/ListMatchingProducts", ReplyAction="http://localhost/productsService/02/IProductsService/ListMatchingProductsResponse" +
            "")]
        System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData[]> ListMatchingProductsAsync(string match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/GetProduct", ReplyAction="http://localhost/productsService/02/IProductsService/GetProductResponse")]
        ProductsClient.ProductsService.ProductData GetProduct(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/GetProduct", ReplyAction="http://localhost/productsService/02/IProductsService/GetProductResponse")]
        System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData> GetProductAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/CurrentStock", ReplyAction="http://localhost/productsService/02/IProductsService/CurrentStockResponse")]
        int CurrentStock(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/CurrentStock", ReplyAction="http://localhost/productsService/02/IProductsService/CurrentStockResponse")]
        System.Threading.Tasks.Task<int> CurrentStockAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/AddStock", ReplyAction="http://localhost/productsService/02/IProductsService/AddStockResponse")]
        bool AddStock(string productCode, decimal quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/productsService/02/IProductsService/AddStock", ReplyAction="http://localhost/productsService/02/IProductsService/AddStockResponse")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, decimal quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsServiceChannel : ProductsClient.ProductsService.IProductsService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsServiceClient : System.ServiceModel.ClientBase<ProductsClient.ProductsService.IProductsService>, ProductsClient.ProductsService.IProductsService
    {
        
        public ProductsServiceClient()
        {
        }
        
        public ProductsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ProductsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ProductsClient.ProductsService.ProductData[] ListMatchingProducts(string match)
        {
            return base.Channel.ListMatchingProducts(match);
        }
        
        public System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData[]> ListMatchingProductsAsync(string match)
        {
            return base.Channel.ListMatchingProductsAsync(match);
        }
        
        public ProductsClient.ProductsService.ProductData GetProduct(string productCode)
        {
            return base.Channel.GetProduct(productCode);
        }
        
        public System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData> GetProductAsync(string productCode)
        {
            return base.Channel.GetProductAsync(productCode);
        }
        
        public int CurrentStock(string productCode)
        {
            return base.Channel.CurrentStock(productCode);
        }
        
        public System.Threading.Tasks.Task<int> CurrentStockAsync(string productCode)
        {
            return base.Channel.CurrentStockAsync(productCode);
        }
        
        public bool AddStock(string productCode, decimal quantity)
        {
            return base.Channel.AddStock(productCode, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, decimal quantity)
        {
            return base.Channel.AddStockAsync(productCode, quantity);
        }
    }
}
